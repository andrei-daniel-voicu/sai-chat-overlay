name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    if: contains(github.event.head_commit.message, 'release!')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Run semantic-release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(npx semantic-release --dry-run | grep -oP '(?<=The next release version is ).*')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          npx semantic-release

  docker:
    needs: release
    if: contains(github.event.head_commit.message, 'release!')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/sai-chat-overlay
          tags: |
            type=raw,value=latest
            type=raw,value=${{ needs.release.outputs.version }}

      - name: Build & push multi-arch (latest + version)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
